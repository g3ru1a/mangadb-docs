{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#mangadb-api","title":"MangaDB Api","text":"<p>MangaDB API is a powerful RESTful API designed to provide comprehensive data and metadata about manga volumes, series, staff, and publishers. With MangaDB API, you can collect and curate manga-related data, making it easier to build powerful applications and services for manga enthusiasts.</p>"},{"location":"#how-to-access-the-api","title":"How to access the API","text":"<p>If you want to use our live API, you can do so by accessing it at https://api.manga-db.com.</p> <p>Alternatively, if you want to contribute to our project's source code, follow the installation guide below. You can also experiment with our endpoints by using our sandbox API URL, https://sandbox.manga-db.com, before diving into the code.</p>"},{"location":"#setting-up-the-api-on-your-machine","title":"Setting up the API on your machine","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Before proceeding with the installation, ensure that you have Docker installed in your system. You can install the latest version of Docker by following the instructions given in the official Docker documentation.</p>"},{"location":"#setup","title":"Setup","text":"<p>To set up the project, follow the steps below:</p> <ol> <li>Clone the repository.</li> </ol> <pre><code>$ git clone https://github.com/g3ru1a/mangadb-api\n</code></pre> <ol> <li>Install the composer dependencies using the following command in your terminal:</li> </ol> <pre><code>$ docker run --rm \\\n-u \"$(id -u):$(id -g)\" \\\n-v $(pwd):/var/www/html \\\n-w /var/www/html \\\nlaravelsail/php81-composer:latest \\\ncomposer install --ignore-platform-reqs\n</code></pre> <ol> <li>Copy <code>.env.example</code> to <code>.env</code>.</li> </ol> <pre><code>$ cp .env.example .env\n</code></pre> <ol> <li>Set the <code>WWWGROUP</code> and <code>WWWUSER</code> to your user ID, if it's not <code>1000</code>, in the <code>.env</code> file.</li> </ol> <pre><code>WWWGROUP=1000\nWWWUSER=1000\n</code></pre> <ol> <li>Set the database name, user, and password you want in the <code>.env</code> file.</li> </ol> <pre><code>DB_DATABASE=laravel\nDB_USERNAME=sail\nDB_PASSWORD=password\n</code></pre> <ol> <li>Add your S3 information in the <code>.env</code> file.</li> </ol> <pre><code>AWS_ACCESS_KEY_ID=&lt;your-access-key&gt;\nAWS_SECRET_ACCESS_KEY=&lt;your-secret-access-key&gt;\nAWS_DEFAULT_REGION=&lt;your-region&gt;\nAWS_BUCKET=&lt;your-bucket&gt;\n</code></pre> <ol> <li>Set your image_cdn URL in the <code>.env</code> file.</li> </ol> <pre><code>IMAGE_CDN_URL=\"https://cdn.yourwebsite.com/\"\n</code></pre> <ol> <li>Run Sail using the following command:</li> </ol> <pre><code>$ ./vendor/bin/sail up\n</code></pre> <p>Run migrations using the following command:</p> <pre><code>$ php artisan migrate:fresh\n</code></pre> <p>If you want to run migrations using Docker, use the following command:</p> <pre><code>$ docker exec -d &lt;container_name&gt; php artisan migrate:fresh\n</code></pre> <p>That's it, you should be all set to play around with the api.</p>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<p>Below is a list of common issues:</p> <ul> <li>If you encounter permission issues for the logs folder, check this issue on StackOverflow.</li> </ul>"},{"location":"Authentication/","title":"MangaDB - Authentication Endpoints","text":"<p>To access the other endpoints in the MangaDB API, you'll need to obtain an authentication token. There are different methods for obtaining a token depending on the context:</p> <ul> <li>For production use, API tokens are issued with a 24-hour expiration period.</li> <li>Sandbox tokens are available for testing purposes and do not expire.</li> <li>If you're using the API locally, the token is set to never expire by default, although this may not be advisable for security reasons.</li> </ul> <p>The sandbox API provides two default user accounts, and while you can register your own account, it will not have elevated privileges. The available default accounts are:</p> <ul> <li>User: user@test.com | password</li> <li>Editor: editor@test.com | password</li> </ul> <p></p>"},{"location":"Endpoints/","title":"MangaDB - All Endpoints","text":"<p>This list should have all the endpoints the api has to offer for both users and editors</p>"},{"location":"Endpoints/#bindings","title":"Bindings","text":"<p>Binding data refers to information about the physical construction of a book. This can include details about the cover material, the type of binding used to hold the pages together, and any special features or embellishments.</p> <p>Entries could be something like \"Special Edition\" or \"Deluxe Edition\" to denote a book that has unique or enhanced features beyond the standard paperback or hardback binding.</p> <p></p>"},{"location":"Endpoints/#languages","title":"Languages","text":"<p>This table is used to reference the language of a book or series, which is a crucial aspect of organizing books within the database. Each language in the table is identified by its name and ISO[1] code, providing a standardized system for classifying languages. For example, English is identified as \"en\" and French is identified as \"fr\".</p> <p>See Also: - [1]: Wikipedie ISO 639_1 Codes</p> <p></p>"},{"location":"Endpoints/#item-types","title":"Item Types","text":"<p>The ItemType table is used to store information about the type or genre of a book, such as Manga, Light Novels, Novels, and Comic books. Each book in the database is associated with an ItemType entry that describes its specific type or genre.</p> <p>The use of ItemType provides a standardized way to categorize books, making it easier for users to search and filter books based on their interests. For example, a user interested in Manga can quickly search for books that have been categorized as such using the ItemType field. By enabling users to easily find books based on their preferred genre, the ItemType table helps to improve the user experience of searching and browsing through a large collection of books.</p> <p></p>"},{"location":"Endpoints/#publishers","title":"Publishers","text":"<p>The Publisher table in the book database API contains publisher information such as name, website URL, description, and logo. Developers can use this table to retrieve and organize books by publisher, and to display additional information about publishers to users. This enables users to discover new books and publishers more easily.</p> <p></p>"},{"location":"Endpoints/#statuses","title":"Statuses","text":"<p>The status is used to denote the current state of a book or series. For example, a book that is currently being published would have a status of \"Ongoing\", while a book that has been completed would have a status of \"Completed\".</p> <p></p>"},{"location":"Endpoints/#staff","title":"Staff","text":"<p>Staff data refers to information about the people who worked on a book, such as the author, illustrator, editor etc.</p> <p></p>"},{"location":"Endpoints/#series","title":"Series","text":"<p>Series contains all the variations of a title, such as manga, novels, light novels, special editions etc.</p> <p></p>"},{"location":"Endpoints/#seriestype","title":"SeriesType","text":"<p>SeriesType contains data about certain variations of a title. For example, a series could have a type of \"Manga\" or \"Light Novel\" and all the books in that series-type would be of that type.</p> <p></p>"},{"location":"Endpoints/#book","title":"Book","text":"<p>Book contains all the information about a book, such as the title, author, publisher, ISBN, release date etc.</p> <p></p>"},{"location":"Endpoints/components/","title":"Components","text":""},{"location":"Endpoints/reviews/","title":"MangaDB - Review System","text":""},{"location":"Endpoints/reviews/#how-it-works","title":"How it works","text":"<p>This list should have all the endpoints the api has to offer for both users and editors</p>"},{"location":"Endpoints/reviews/#actions","title":"Actions","text":""},{"location":"Endpoints/reviews/#comments","title":"Comments","text":""}]}