openapi: 3.0.0
info: {}
servers:
  - url: http://localhost/api
  - url: https://sandbox.manga-db.com
  - url: https://api.manga-db.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: CRUD
paths:
  /book:
    get:
      tags:
        - CRUD
      summary: Show a list of books
      parameters:
        - $ref: '/openapi-components.yml#/components/parameters/jsonAccept'
        - $ref: '/openapi-components.yml#/components/parameters/jsonContentType'
        - $ref: '/openapi-components.yml#/components/parameters/authorization'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '/openapi-components.yml#/components/schemas/DataObject'
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: '/openapi-components.yml#/components/schemas/BookResource'
    post:
      tags:
        - CRUD
      summary: Create a Book
      parameters:
        - $ref: '/openapi-components.yml#/components/parameters/jsonAccept'
        - $ref: '/openapi-components.yml#/components/parameters/jsonContentType'
        - $ref: '/openapi-components.yml#/components/parameters/authorization'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '/openapi-components.yml#/components/schemas/BookRequest'
      responses:
        '200':
          $ref: '/openapi-components.yml#/components/responses/Book200'
        '401':
          $ref: '/openapi-components.yml#/components/responses/Unauthenticated'
        '422':
          $ref: '/openapi-components.yml#/components/responses/BadData'
  /book/{book}:
    get:
      tags:
        - CRUD
      summary: Show a Book
      parameters:
        - $ref: '/openapi-components.yml#/components/parameters/jsonAccept'
        - $ref: '/openapi-components.yml#/components/parameters/jsonContentType'
        - $ref: '/openapi-components.yml#/components/parameters/authorization'
        - in: path
          name: book
          schema:
            type: integer
          required: true
          description: Numeric ID of the Book resource
      responses:
        '200':
          $ref: '/openapi-components.yml#/components/responses/Book200'
        '401':
          $ref: '/openapi-components.yml#/components/responses/Unauthenticated'
        '404':
          $ref: '/openapi-components.yml#/components/responses/NotFound'
    post:
      tags:
        - CRUD
      summary: Update a Book
      parameters:
        - $ref: '/openapi-components.yml#/components/parameters/jsonAccept'
        - $ref: '/openapi-components.yml#/components/parameters/jsonContentType'
        - $ref: '/openapi-components.yml#/components/parameters/authorization'
        - in: path
          name: book
          schema:
            type: integer
          required: true
          description: Numeric ID of the Book resource
        - name: _method
          in: query
          schema:
            type: string
          required: true
          example: PUT
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '/openapi-components.yml#/components/schemas/BookRequest'
      responses:
        '200':
          $ref: '/openapi-components.yml#/components/responses/Book200'
        '401':
          $ref: '/openapi-components.yml#/components/responses/Unauthenticated'
        '404':
          $ref: '/openapi-components.yml#/components/responses/NotFound'
        '422':
          $ref: '/openapi-components.yml#/components/responses/BadData'
    delete:
      tags:
        - CRUD
      summary: Delete a Book
      parameters:
        - $ref: '/openapi-components.yml#/components/parameters/jsonAccept'
        - $ref: '/openapi-components.yml#/components/parameters/jsonContentType'
        - $ref: '/openapi-components.yml#/components/parameters/authorization'
        - in: path
          name: book
          schema:
            type: integer
          required: true
          description: Numeric ID of the Book resource
      responses:
        '200':
          $ref: '/openapi-components.yml#/components/responses/Book200'
        '401':
          $ref: '/openapi-components.yml#/components/responses/Unauthenticated'
        '403':
          $ref: '/openapi-components.yml#/components/responses/Unauthorized'
        '404':
          $ref: '/openapi-components.yml#/components/responses/NotFound'